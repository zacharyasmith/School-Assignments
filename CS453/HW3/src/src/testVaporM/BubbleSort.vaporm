const ft_BBS
  :BBS.Print
  :BBS.Start
  :BBS.Init
  :BBS.Sort

func BBS.Start [in 0, out 0, local 4]
  $t0 = $a0
  $t1 = $a1
  $t2 = [$t0]
  $s0 = [$t2 + 8]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = $t1
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  $s0 = $s0
  $s0 = [$t0]
  $s0 = [$s0]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  $s0 = $s0
  PrintIntS(99999)
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  $s0 = $s0
  $s0 = [$t0]
  $s0 = [$s0]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $t0 = $v0
  $s0 = $t0
  $v0 = 0
  ret

func BBS.Sort [in 0, out 0, local 9]
  $t0 = $a0
  $t4 = [$t0 + 8]
  $s0 = Sub($t4 1)
  $t1 = $s0
  $s0 = Sub(0 1)
  $t2 = $s0
while0_test:
  $s0 = LtS($t2 $t1)
  if0 $s0 goto :while0_end
  $t3 = 1
while1_test:
  $s0 = Add($t1 1)
  $s0 = LtS($t3 $s0)
  if0 $s0 goto :while1_end
  $s0 = Sub($t3 1)
  $s0 = $s0
  local[0] = $t4
  local[1] = $s3
  local[2] = $t0
  local[3] = $t1
  local[4] = $s0
  local[5] = $t2
  local[6] = $s1
  local[7] = $t3
  local[8] = $s2
  $a0 = $s0
  call :ArrayIndexHelper
  $t4 = local[0]
  $s3 = local[1]
  $t0 = local[2]
  $t1 = local[3]
  $s0 = local[4]
  $t2 = local[5]
  $s1 = local[6]
  $t3 = local[7]
  $s2 = local[8]
  $s0 = $v0
  $s1 = [$t0 + 4]
  $s0 = Add($s1 $s0)
  $s0 = [$s0]
  $s0 = $s0
  local[0] = $t4
  local[1] = $s3
  local[2] = $t0
  local[3] = $t1
  local[4] = $s0
  local[5] = $t2
  local[6] = $s1
  local[7] = $t3
  local[8] = $s2
  $a0 = $t3
  call :ArrayIndexHelper
  $t4 = local[0]
  $s3 = local[1]
  $t0 = local[2]
  $t1 = local[3]
  $s0 = local[4]
  $t2 = local[5]
  $s1 = local[6]
  $t3 = local[7]
  $s2 = local[8]
  $s1 = $v0
  $s2 = [$t0 + 4]
  $s1 = Add($s2 $s1)
  $s1 = [$s1]
  $s1 = $s1
  $s0 = LtS($s1 $s0)
  if0 $s0 goto :if0_else
  $s0 = Sub($t3 1)
  $s0 = $s0
  local[0] = $t4
  local[1] = $s3
  local[2] = $t0
  local[3] = $t1
  local[4] = $s0
  local[5] = $t2
  local[6] = $s1
  local[7] = $t3
  local[8] = $s2
  $a0 = $s0
  call :ArrayIndexHelper
  $t4 = local[0]
  $s3 = local[1]
  $t0 = local[2]
  $t1 = local[3]
  $s0 = local[4]
  $t2 = local[5]
  $s1 = local[6]
  $t3 = local[7]
  $s2 = local[8]
  $s1 = $v0
  $s2 = [$t0 + 4]
  $s1 = Add($s2 $s1)
  $s1 = [$s1]
  $s1 = $s1
  $s2 = [$t0 + 4]
  local[0] = $t4
  local[1] = $s3
  local[2] = $t0
  local[3] = $t1
  local[4] = $s0
  local[5] = $t2
  local[6] = $s1
  local[7] = $t3
  local[8] = $s2
  $a0 = $s0
  call :ArrayIndexHelper
  $t4 = local[0]
  $s3 = local[1]
  $t0 = local[2]
  $t1 = local[3]
  $s0 = local[4]
  $t2 = local[5]
  $s1 = local[6]
  $t3 = local[7]
  $s2 = local[8]
  $s0 = $v0
  $s0 = Add($s2 $s0)
  local[0] = $t4
  local[1] = $s3
  local[2] = $t0
  local[3] = $t1
  local[4] = $s0
  local[5] = $t2
  local[6] = $s1
  local[7] = $t3
  local[8] = $s2
  $a0 = $t3
  call :ArrayIndexHelper
  $t4 = local[0]
  $s3 = local[1]
  $t0 = local[2]
  $t1 = local[3]
  $s0 = local[4]
  $t2 = local[5]
  $s1 = local[6]
  $t3 = local[7]
  $s2 = local[8]
  $s2 = $v0
  $s3 = [$t0 + 4]
  $s2 = Add($s3 $s2)
  $s2 = [$s2]
  [$s0] = $s2
  $s0 = [$t0 + 4]
  local[0] = $t4
  local[1] = $s3
  local[2] = $t0
  local[3] = $t1
  local[4] = $s0
  local[5] = $t2
  local[6] = $s1
  local[7] = $t3
  local[8] = $s2
  $a0 = $t3
  call :ArrayIndexHelper
  $t4 = local[0]
  $s3 = local[1]
  $t0 = local[2]
  $t1 = local[3]
  $s0 = local[4]
  $t2 = local[5]
  $s1 = local[6]
  $t3 = local[7]
  $s2 = local[8]
  $s2 = $v0
  $s2 = Add($s0 $s2)
  [$s2] = $s1
  goto :if0_end
if0_else:
  $s0 = 0
if0_end:
  $s0 = Add($t3 1)
  $t3 = $s0
  goto :while1_test
while1_end:
  $s0 = Sub($t1 1)
  $t1 = $s0
  goto :while0_test
while0_end:
  $v0 = 0
  ret

func BBS.Print [in 0, out 0, local 5]
  $t1 = $a0
  $t0 = 0
while2_test:
  $t2 = [$t1 + 8]
  $s0 = LtS($t0 $t2)
  if0 $s0 goto :while2_end
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  local[4] = $s1
  $a0 = $t0
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s1 = local[4]
  $s0 = $v0
  $s1 = [$t1 + 4]
  $s0 = Add($s1 $s0)
  $s0 = [$s0]
  PrintIntS($s0)
  $s0 = Add($t0 1)
  $t0 = $s0
  goto :while2_test
while2_end:
  $v0 = 0
  ret

func BBS.Init [in 0, out 0, local 4]
  $t0 = $a0
  $t1 = $a1
  [$t0 + 8] = $t1
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = $t1
  call :AllocArray
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $s0 = $v0
  [$t0 + 4] = $s0
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 0
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $s1 = $v0
  $s1 = Add($s0 $s1)
  [$s1] = 20
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 1
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $t1 = $v0
  $t1 = Add($s0 $t1)
  [$t1] = 7
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 2
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $s1 = $v0
  $s1 = Add($s0 $s1)
  [$s1] = 12
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 3
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $t1 = $v0
  $t1 = Add($s0 $t1)
  [$t1] = 18
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 4
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $s1 = $v0
  $s1 = Add($s0 $s1)
  [$s1] = 2
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 5
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $t1 = $v0
  $t1 = Add($s0 $t1)
  [$t1] = 11
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 6
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $s1 = $v0
  $s1 = Add($s0 $s1)
  [$s1] = 6
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 7
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $t1 = $v0
  $t1 = Add($s0 $t1)
  [$t1] = 9
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 8
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $s1 = $v0
  $s1 = Add($s0 $s1)
  [$s1] = 19
  $s0 = [$t0 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $s1
  $a0 = 9
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $s1 = local[3]
  $t0 = $v0
  $t0 = Add($s0 $t0)
  [$t0] = 5
  $v0 = 0
  ret

func AllocArray [in 0, out 0, local 0]
  $t0 = $a0
  $t1 = MulS($t0 4)
  $t1 = Add($t1 4)
  $s0 = HeapAllocZ($t1)
  [$s0] = $t0
  $v0 = $s0
  ret

func ArrayIndexHelper [in 0, out 0, local 0]
  $t0 = $a0
  $s0 = Add($t0 1)
  $t0 = MulS($s0 4)
  $v0 = $t0
  ret

func Main [in 0, out 0, local 3]
  $t0 = HeapAllocZ(12)
  [$t0] = :ft_BBS
  $t1 = [$t0]
  $s0 = [$t1 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  $a0 = $t0
  $a1 = 10
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t0 = $v0
  PrintIntS($t0)
  ret


