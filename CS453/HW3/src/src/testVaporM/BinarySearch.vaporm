const ft_BS
  :BS.Print
  :BS.Div
  :BS.Compare
  :BS.Search
  :BS.Start
  :BS.Init

func BS.Start [in 0, out 0, local 4]
  $t0 = $a0
  $t1 = $a1
  $t2 = [$t0]
  $s0 = [$t2 + 20]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = $t1
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  $s0 = $s0
  $s0 = [$t0]
  $s0 = [$s0]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  $s0 = $s0
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 8
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  if0 $s0 goto :if0_else
  PrintIntS(1)
  goto :if0_end
if0_else:
  PrintIntS(0)
if0_end:
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 19
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  if0 $s0 goto :if1_else
  PrintIntS(1)
  goto :if1_end
if1_else:
  PrintIntS(0)
if1_end:
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 20
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  if0 $s0 goto :if2_else
  PrintIntS(1)
  goto :if2_end
if2_else:
  PrintIntS(0)
if2_end:
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 21
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  if0 $s0 goto :if3_else
  PrintIntS(1)
  goto :if3_end
if3_else:
  PrintIntS(0)
if3_end:
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 37
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  if0 $s0 goto :if4_else
  PrintIntS(1)
  goto :if4_end
if4_else:
  PrintIntS(0)
if4_end:
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 38
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  if0 $s0 goto :if5_else
  PrintIntS(1)
  goto :if5_end
if5_else:
  PrintIntS(0)
if5_end:
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 39
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s0 = $v0
  if0 $s0 goto :if6_else
  PrintIntS(1)
  goto :if6_end
if6_else:
  PrintIntS(0)
if6_end:
  $s0 = [$t0]
  $s0 = [$s0 + 12]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  $a0 = $t0
  $a1 = 50
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $t0 = $v0
  if0 $t0 goto :if7_else
  PrintIntS(1)
  goto :if7_end
if7_else:
  PrintIntS(0)
if7_end:
  $v0 = 999
  ret

func BS.Search [in 0, out 0, local 10]
  $t0 = $a0
  $t2 = $a1
  $t5 = 0
  $t6 = 0
  $s0 = [$t0 + 4]
  $s0 = [$s0]
  $s0 = $s0
  $s1 = Sub($s0 1)
  $s0 = $s1
  $t1 = 0
  $t3 = 1
while0_test:
  if0 $t3 goto :while0_end
  $s1 = Add($t1 $s0)
  $t4 = $s1
  $s1 = [$t0]
  $s1 = [$s1 + 4]
  local[0] = $t4
  local[1] = $t5
  local[2] = $t6
  local[3] = $t0
  local[4] = $t1
  local[5] = $s0
  local[6] = $t2
  local[7] = $s1
  local[8] = $t3
  local[9] = $s2
  $a0 = $t0
  $a1 = $t4
  call $s1
  $t4 = local[0]
  $t5 = local[1]
  $t6 = local[2]
  $t0 = local[3]
  $t1 = local[4]
  $s0 = local[5]
  $t2 = local[6]
  $s1 = local[7]
  $t3 = local[8]
  $s2 = local[9]
  $s1 = $v0
  $t4 = $s1
  local[0] = $t4
  local[1] = $t5
  local[2] = $t6
  local[3] = $t0
  local[4] = $t1
  local[5] = $s0
  local[6] = $t2
  local[7] = $s1
  local[8] = $t3
  local[9] = $s2
  $a0 = $t4
  call :ArrayIndexHelper
  $t4 = local[0]
  $t5 = local[1]
  $t6 = local[2]
  $t0 = local[3]
  $t1 = local[4]
  $s0 = local[5]
  $t2 = local[6]
  $s1 = local[7]
  $t3 = local[8]
  $s2 = local[9]
  $s1 = $v0
  $s2 = [$t0 + 4]
  $s1 = Add($s2 $s1)
  $s1 = [$s1]
  $t5 = $s1
  $s1 = LtS($t2 $t5)
  if0 $s1 goto :if8_else
  $s1 = Sub($t4 1)
  $s0 = $s1
  goto :if8_end
if8_else:
  $s1 = Add($t4 1)
  $t1 = $s1
if8_end:
  $s1 = [$t0]
  $s1 = [$s1 + 8]
  local[0] = $t4
  local[1] = $t5
  local[2] = $t6
  local[3] = $t0
  local[4] = $t1
  local[5] = $s0
  local[6] = $t2
  local[7] = $s1
  local[8] = $t3
  local[9] = $s2
  $a0 = $t0
  $a1 = $t5
  $a2 = $t2
  call $s1
  $t4 = local[0]
  $t5 = local[1]
  $t6 = local[2]
  $t0 = local[3]
  $t1 = local[4]
  $s0 = local[5]
  $t2 = local[6]
  $s1 = local[7]
  $t3 = local[8]
  $s2 = local[9]
  $s1 = $v0
  if0 $s1 goto :if9_else
  $t3 = 0
  goto :if9_end
if9_else:
  $t3 = 1
if9_end:
  $s1 = LtS($s0 $t1)
  if0 $s1 goto :if10_else
  $t3 = 0
  goto :if10_end
if10_else:
  $s1 = 0
if10_end:
  goto :while0_test
while0_end:
  $s0 = [$t0]
  $s0 = [$s0 + 8]
  local[0] = $t4
  local[1] = $t5
  local[2] = $t6
  local[3] = $t0
  local[4] = $t1
  local[5] = $s0
  local[6] = $t2
  local[7] = $s1
  local[8] = $t3
  local[9] = $s2
  $a0 = $t0
  $a1 = $t5
  $a2 = $t2
  call $s0
  $t4 = local[0]
  $t5 = local[1]
  $t6 = local[2]
  $t0 = local[3]
  $t1 = local[4]
  $s0 = local[5]
  $t2 = local[6]
  $s1 = local[7]
  $t3 = local[8]
  $s2 = local[9]
  $t0 = $v0
  if0 $t0 goto :if11_else
  $s0 = 1
  goto :if11_end
if11_else:
  $s0 = 0
if11_end:
  $v0 = $s0
  ret

func BS.Div [in 0, out 0, local 0]
  $t3 = $a1
  $t1 = 0
  $t0 = 0
  $s0 = Sub($t3 1)
  $t2 = $s0
while1_test:
  $s0 = LtS($t0 $t2)
  if0 $s0 goto :while1_end
  $s0 = Add($t1 1)
  $t1 = $s0
  $s0 = Add($t0 2)
  $t0 = $s0
  goto :while1_test
while1_end:
  $v0 = $t1
  ret

func BS.Compare [in 0, out 0, local 0]
  $t1 = $a1
  $t2 = $a2
  $t3 = 0
  $s0 = Add($t2 1)
  $t0 = $s0
  $s0 = LtS($t1 $t2)
  if0 $s0 goto :if12_else
  $s0 = 0
  goto :if12_end
if12_else:
  $s1 = LtS($t1 $t0)
  $s1 = LtS($t1 $t0)
  $t0 = Eq($s1 0)
  if0 $t0 goto :if13_else
  $t0 = 1
  goto :if13_end
if13_else:
  $t0 = 0
if13_end:
  if0 $t0 goto :if14_else
  $s0 = 0
  goto :if14_end
if14_else:
  $s0 = 1
if12_end:
if14_end:
  $v0 = $s0
  ret

func BS.Print [in 0, out 0, local 5]
  $t1 = $a0
  $t0 = 1
while2_test:
  $t2 = [$t1 + 8]
  $s0 = LtS($t0 $t2)
  if0 $s0 goto :while2_end
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  local[4] = $s1
  $a0 = $t0
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s1 = local[4]
  $s0 = $v0
  $s1 = [$t1 + 4]
  $s0 = Add($s1 $s0)
  $s0 = [$s0]
  PrintIntS($s0)
  $s0 = Add($t0 1)
  $t0 = $s0
  goto :while2_test
while2_end:
  PrintIntS(99999)
  $v0 = 0
  ret

func BS.Init [in 0, out 0, local 7]
  $t3 = $a0
  $t2 = $a1
  [$t3 + 8] = $t2
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  local[4] = $s1
  local[5] = $t3
  local[6] = $s2
  $a0 = $t2
  call :AllocArray
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s1 = local[4]
  $t3 = local[5]
  $s2 = local[6]
  $s0 = $v0
  [$t3 + 4] = $s0
  $t0 = 1
  $s0 = [$t3 + 8]
  $s0 = Add($s0 1)
  $t1 = $s0
while3_test:
  $s0 = [$t3 + 8]
  $s0 = LtS($t0 $s0)
  if0 $s0 goto :while3_end
  $s0 = MulS(2 $t0)
  $s0 = $s0
  $s1 = Sub($t1 3)
  $s1 = $s1
  $s2 = [$t3 + 4]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  local[3] = $t2
  local[4] = $s1
  local[5] = $t3
  local[6] = $s2
  $a0 = $t0
  call :ArrayIndexHelper
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t2 = local[3]
  $s1 = local[4]
  $t3 = local[5]
  $s2 = local[6]
  $t2 = $v0
  $t2 = Add($s2 $t2)
  $s0 = Add($s0 $s1)
  [$t2] = $s0
  $s0 = Add($t0 1)
  $t0 = $s0
  $s0 = Sub($t1 1)
  $t1 = $s0
  goto :while3_test
while3_end:
  $v0 = 0
  ret

func AllocArray [in 0, out 0, local 0]
  $t0 = $a0
  $t1 = MulS($t0 4)
  $t1 = Add($t1 4)
  $s0 = HeapAllocZ($t1)
  [$s0] = $t0
  $v0 = $s0
  ret

func ArrayIndexHelper [in 0, out 0, local 0]
  $t0 = $a0
  $s0 = Add($t0 1)
  $t0 = MulS($s0 4)
  $v0 = $t0
  ret

func Main [in 0, out 0, local 3]
  $t0 = HeapAllocZ(12)
  [$t0] = :ft_BS
  $t1 = [$t0]
  $s0 = [$t1 + 16]
  local[0] = $t0
  local[1] = $t1
  local[2] = $s0
  $a0 = $t0
  $a1 = 20
  call $s0
  $t0 = local[0]
  $t1 = local[1]
  $s0 = local[2]
  $t0 = $v0
  PrintIntS($t0)
  ret


