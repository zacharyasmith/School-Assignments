const ft_Fac
  :Fac.ComputeFac

func Fac.ComputeFac(this t.1)
  t.7 = LtS(t.1 1)
  if0 t.7 goto :if0_else
    t.2 = 1
  goto :if0_end
  if0_else:
    t.8 = [this + 0]
    t.9 = [t.8 + 0]
    t.10 = Sub(t.1 1)
    t.11 = call t.9(this t.10)
    t.12 = MulS(t.1 t.11)
    t.2 = t.12
  if0_end:
  ret t.2

func AllocArray(size)
  bytes = MulS(size 4)
  bytes = Add(bytes 4)
  v = HeapAllocZ(bytes)
  [v] = size
  ret v

func ArrayIndexHelper(index)
  loc = Add(index 1)
  addr = MulS(loc 4)
  ret addr

func Main()
  t.3 = HeapAllocZ(4)
  [t.3] = :ft_Fac
  t.4 = [t.3 + 0]
  t.5 = [t.4 + 0]
  t.6 = call t.5(t.3 10)
  PrintIntS(t.6)
  ret

